'use strict';

const NodeCache = require("node-cache");

// Store all data map to the session, with TTL to release memory.
const dataStore = new NodeCache({
	// Hold data for 10 minutes only
	stdTTL: 10 * 60,
	// Clone all objects, to only copy and not edit other session data
	useClones: true,
});

// The predefined data for each new session data
const minions = [{ "minionStatus": { "switch": { "status": "off" } }, "minionType": "switch", "name": "Switch demo", "device": { "brand": "mock", "model": "switch demo", "pysicalDevice": { "mac": "72vumvls06", "ip": "192.168.2.10", "vendor": "ASUSTek COMPUTER INC.", "name": "Some device" } }, "minionId": "sWmpOU", "isProperlyCommunicated": true, "calibration": { "calibrationMode": "AUTO", "calibrationCycleMinutes": 10 }, "minionAutoTurnOffMS": 60000 }, { "minionStatus": {}, "minionType": "switch", "name": "Switch 2", "device": { "brand": "broadlink", "model": "SP2", "pysicalDevice": { "mac": "tr5eu8kgqq", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" } }, "minionId": "NeONug", "isProperlyCommunicated": false, "minionAutoTurnOffMS": 60000 }, { "minionStatus": { "light": { "brightness": 50, "status": "on" } }, "minionType": "light", "name": "Lamp demo", "device": { "brand": "mock", "model": "Light demo", "pysicalDevice": { "mac": "0tpktlf1e8", "ip": "", "vendor": "Xiaomi Communications Co Ltd", "name": "" } }, "minionId": "ymiR8d", "isProperlyCommunicated": true, "calibration": { "calibrationMode": "LOCK_ON", "calibrationCycleMinutes": 0 }, "room": "Bedroom" }, { "minionStatus": { "temperatureLight": { "brightness": 50, "status": "on", "temperature": 85 } }, "minionType": "temperatureLight", "name": "Lamp 2", "device": { "brand": "mock", "model": "Temperature Light demo", "pysicalDevice": { "mac": "r54kfph8rg", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" } }, "minionId": "Eu50vx", "isProperlyCommunicated": true, "room": "Living room" }, { "minionStatus": { "colorLight": { "brightness": 50, "status": "on", "temperature": 85, "blue": 120, "green": 123, "red": 143 } }, "minionType": "colorLight", "name": "Colorful lamp", "device": { "brand": "mock", "model": "Color Light demo", "pysicalDevice": { "mac": "5ip6v4mhl7", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" } }, "minionId": "4QbJva", "isProperlyCommunicated": true, "room": "Children's room", "minionAutoTurnOffMS": 0, "calibration": { "calibrationMode": "AUTO", "calibrationCycleMinutes": 0 } }, { "minionStatus": { "roller": { "status": "on", "direction": "up" } }, "minionType": "roller", "name": "Roller demo", "device": { "brand": "mock", "model": "Roller demo", "pysicalDevice": { "mac": "snvnq0rqcb", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" } }, "minionId": "ZQS0Ly", "isProperlyCommunicated": true, "room": "Living room", "minionAutoTurnOffMS": 0 }, { "minionStatus": { "cleaner": { "fanSpeed": "high", "mode": "dock", "status": "off" } }, "minionType": "cleaner", "name": "Clean robot", "device": { "brand": "miio", "model": "Robot vacuum", "pysicalDevice": { "mac": "n2lpp43y6y", "ip": "192.168.2.22", "vendor": "Cadmus Computer Systems", "name": "PC 2" } }, "minionId": "FDVOqW", "isProperlyCommunicated": false }, { "minionStatus": { "toggle": { "status": "off" } }, "minionType": "toggle", "name": "Toggle demo", "device": { "brand": "mock", "model": "RF toggle demo", "pysicalDevice": { "mac": "qze7gockzg", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" } }, "minionId": "NxNped", "isProperlyCommunicated": true, "calibration": { "calibrationMode": "SHABBAT", "calibrationCycleMinutes": 10 }, "minionAutoTurnOffMS": 60000 }, { "minionStatus": { "airConditioning": { "fanStrength": "med", "mode": "cold", "status": "on", "temperature": 21 } }, "minionType": "airConditioning", "name": "Air conditioning demo", "device": { "brand": "mock", "model": "ac demo", "pysicalDevice": { "mac": "av2it6l9uw", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" } }, "minionId": "KBkEBL", "isProperlyCommunicated": true, "room": "", "minionAutoTurnOffMS": 0, "calibration": { "calibrationMode": "LOCK_OFF", "calibrationCycleMinutes": 0 } }];
const timings = [{ "isActive": false, "timingId": "6T3qzi", "timingName": "auto", "timingProperties": { "dailySunTrigger": { "days": ["sunday"], "durationMinutes": 60, "sunTrigger": "sunset" }, "dailyTimeTrigger": { "days": ["saturday", "wednesday"], "hour": 4, "minutes": 21 }, "once": { "date": 1632391734640 }, "timeout": { "durationInMinutes": 2, "startDate": 1632391735700 } }, "timingType": "timeout" }, { "isActive": false, "timingId": "6Bt8RO", "timingName": "auto", "timingProperties": { "dailySunTrigger": { "days": ["sunday"], "durationMinutes": 60, "sunTrigger": "sunset" }, "dailyTimeTrigger": { "days": ["saturday", "wednesday"], "hour": 4, "minutes": 21 }, "once": { "date": 1632391798369 }, "timeout": { "durationInMinutes": 2, "startDate": 1632391799429 } }, "timingType": "dailySunTrigger" }, { "isActive": false, "timingId": "3Hf2rj", "timingName": "auto", "timingProperties": { "dailySunTrigger": { "days": ["sunday"], "durationMinutes": 60, "sunTrigger": "sunset" }, "dailyTimeTrigger": { "days": ["saturday", "wednesday"], "hour": 4, "minutes": 21 }, "once": { "date": 1632391655199 }, "timeout": { "durationInMinutes": 1, "startDate": 1632391656199 } }, "timingType": "timeout" }, { "timingProperties": { "dailyTimeTrigger": { "hour": 22, "minutes": 20, "days": ["tuesday"] } }, "timingType": "dailyTimeTrigger", "timingName": "auto", "isActive": true, "timingId": "Xrh6K0", "triggerDirectAction": { "minionStatus": { "switch": { "status": "off" } }, "minionId": "NeONug" } }, { "timingProperties": { "dailyTimeTrigger": { "hour": 22, "minutes": 9, "days": ["wednesday"] } }, "timingType": "dailyTimeTrigger", "timingName": "auto", "isActive": false, "timingId": "ktMcro", "triggerDirectAction": { "minionStatus": { "cleaner": { "status": "on", "fanSpeed": "med", "mode": "clean" } }, "minionId": "FDVOqW" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": -17, "sunTrigger": "sunset", "days": ["wednesday", "sunday", "monday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": true, "timingId": "kzs5QM", "triggerDirectAction": { "minionStatus": { "light": { "status": "on", "brightness": 76 } }, "minionId": "ymiR8d" } }, { "timingProperties": { "timeout": { "durationInMinutes": 1, "startDate": 1632577403085 } }, "timingType": "timeout", "timingName": "auto", "isActive": true, "timingId": "AkqGdb", "triggerDirectAction": { "minionStatus": { "light": { "status": "off", "brightness": 50 } }, "minionId": "ymiR8d" } }, { "timingProperties": { "once": { "date": 1632929483000 } }, "timingType": "once", "timingName": "auto", "isActive": false, "timingId": "C7DrSI", "triggerDirectAction": { "minionStatus": { "light": { "status": "on", "brightness": 50 } }, "minionId": "ymiR8d" } }, { "timingProperties": { "timeout": { "durationInMinutes": 2, "startDate": 1632577562561 } }, "timingType": "timeout", "timingName": "auto", "isActive": true, "timingId": "dnpo2t", "triggerDirectAction": { "minionStatus": { "light": { "status": "off", "brightness": 17 } }, "minionId": "ymiR8d" } }, { "timingProperties": { "timeout": { "durationInMinutes": 2, "startDate": 1632577752987 } }, "timingType": "timeout", "timingName": "auto", "isActive": true, "timingId": "q1YnLY", "triggerDirectAction": { "minionStatus": { "temperatureLight": { "status": "off", "brightness": 1, "temperature": 1 } }, "minionId": "Eu50vx" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": -4, "sunTrigger": "sunrise", "days": ["wednesday", "tuesday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": false, "timingId": "a8bY61", "triggerDirectAction": { "minionStatus": { "temperatureLight": { "status": "on", "brightness": 50, "temperature": 50 } }, "minionId": "Eu50vx" } }, { "timingProperties": { "once": { "date": 1631287819000 } }, "timingType": "once", "timingName": "auto", "isActive": true, "timingId": "LfGRGa", "triggerDirectAction": { "minionStatus": { "airConditioning": { "status": "on", "fanStrength": "med", "mode": "cold", "temperature": 16 } }, "minionId": "KBkEBL" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": 15, "sunTrigger": "sunset", "days": ["sunday", "monday", "tuesday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": true, "timingId": "XEsCk1", "triggerDirectAction": { "minionStatus": { "airConditioning": { "status": "on", "fanStrength": "low", "mode": "cold", "temperature": 26 } }, "minionId": "KBkEBL" } }, { "timingProperties": { "timeout": { "durationInMinutes": 120, "startDate": 1632723450024 } }, "timingType": "timeout", "timingName": "auto", "isActive": false, "timingId": "kTqBWU", "triggerDirectAction": { "minionStatus": { "airConditioning": { "status": "on", "fanStrength": "auto", "mode": "cold", "temperature": 16 } }, "minionId": "KBkEBL" } }, { "timingProperties": { "once": { "date": 1631834262000 } }, "timingType": "once", "timingName": "auto", "isActive": false, "timingId": "P0xp01", "triggerDirectAction": { "minionStatus": { "cleaner": { "status": "on", "fanSpeed": "low", "mode": "clean" } }, "minionId": "FDVOqW" } }, { "timingProperties": { "timeout": { "startDate": 1632470236476, "durationInMinutes": 60 } }, "timingType": "timeout", "timingName": "auto", "isActive": false, "timingId": "09wVVT", "triggerDirectAction": { "minionStatus": { "cleaner": { "status": "on", "fanSpeed": "auto", "mode": "clean" } }, "minionId": "FDVOqW" } }, { "timingProperties": { "dailySunTrigger": { "days": [], "durationMinutes": 0, "sunTrigger": "sunrise" } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": false, "timingId": "pAXK59", "triggerDirectAction": { "minionStatus": { "cleaner": { "status": "off", "fanSpeed": "auto", "mode": "clean" } }, "minionId": "FDVOqW" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": 0, "sunTrigger": "sunrise", "days": ["saturday", "thursday", "friday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": false, "timingId": "3ARlgm", "triggerDirectAction": { "minionStatus": { "cleaner": { "status": "on", "fanSpeed": "high", "mode": "clean" } }, "minionId": "FDVOqW" } }, { "timingProperties": { "dailyTimeTrigger": { "hour": 0, "minutes": 0, "days": ["wednesday"] } }, "timingType": "dailyTimeTrigger", "timingName": "auto", "isActive": false, "timingId": "C1pSTT", "triggerDirectAction": { "minionStatus": { "colorLight": { "status": "on", "brightness": 25, "temperature": 39, "red": 152, "green": 20, "blue": 183 } }, "minionId": "4QbJva" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": 55, "sunTrigger": "sunset", "days": ["wednesday", "saturday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": false, "timingId": "BCRDAv", "triggerDirectAction": { "minionStatus": { "colorLight": { "status": "on", "brightness": 43, "temperature": 71, "red": 151, "green": 10, "blue": 70 } }, "minionId": "4QbJva" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": 0, "sunTrigger": "sunrise", "days": ["saturday", "tuesday", "monday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": false, "timingId": "wVGuHS", "triggerDirectAction": { "minionStatus": { "airConditioning": { "status": "on", "fanStrength": "auto", "mode": "cold", "temperature": 19 } }, "minionId": "cS4ifP" } }, { "timingProperties": { "dailyTimeTrigger": { "hour": 16, "minutes": 57, "days": ["saturday", "tuesday", "sunday", "wednesday"] } }, "timingType": "dailyTimeTrigger", "timingName": "auto", "isActive": true, "timingId": "fHDoRB", "triggerDirectAction": { "minionStatus": { "roller": { "status": "on", "direction": "up" } }, "minionId": "ZQS0Ly" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": -3, "sunTrigger": "sunrise", "days": ["sunday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": true, "timingId": "faicw8", "triggerDirectAction": { "minionStatus": { "colorLight": { "status": "off", "brightness": 25, "temperature": 66, "red": 57, "green": 47, "blue": 135 } }, "minionId": "4QbJva" } }, { "timingProperties": { "dailySunTrigger": { "durationMinutes": 6, "sunTrigger": "sunset", "days": ["saturday"] } }, "timingType": "dailySunTrigger", "timingName": "auto", "isActive": true, "timingId": "btujds", "triggerDirectAction": { "minionStatus": { "colorLight": { "status": "on", "brightness": 53, "temperature": 50, "red": 168, "green": 121, "blue": 75 } }, "minionId": "4QbJva" } }, { "timingProperties": { "once": { "date": 1631742240000 } }, "timingType": "once", "timingName": "auto", "isActive": true, "timingId": "s0fnJA", "triggerDirectAction": { "minionStatus": { "colorLight": { "status": "on", "brightness": 75, "temperature": 79, "red": 181, "green": 89, "blue": 209 } }, "minionId": "4QbJva" } }];
const devices = [{ "mac": "------------", "ip": "192.168.2.106", "vendor": "Casanet Local Server", "name": "Casanet Server" }, { "mac": "kldh94b19z", "ip": "192.168.2.1", "vendor": "Edimax Technology Co. Ltd.", "name": "My device demo" }, { "mac": "dxj0a6eirx", "ip": "192.168.2.10", "vendor": "ASUSTek COMPUTER INC.", "name": "Some device" }, { "mac": "83r4kxf8v3", "ip": "192.168.2.12", "vendor": "Edimax Technology Co. Ltd.", "name": "Phone" }, { "mac": "sqlwxzmnx5", "ip": "192.168.2.19", "vendor": "PEGATRON CORPORATION", "name": "Router" }, { "mac": "yv5vxo5w9c", "ip": "192.168.2.22", "vendor": "Cadmus Computer Systems", "name": "PC 2" }, { "mac": "en1qeveb1q", "ip": "", "vendor": "Xiaomi Communications Co Ltd", "name": "" }];
const users = [{ "email": "user@casanet.casa", "displayName": "Default User", "scope": "userAuth", "ignoreTfa": false }, { "email": "admin@casanet.casa", "scope": "adminAuth", "displayName": "Default Admin", "ignoreTfa": false, "passwordChangeRequired": false }];
const devicesKinds = [{ "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": 1, "model": "switch demo", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "ac demo", "supportedMinionType": "airConditioning", "isRecordingSupported": true, "isFetchCommandsAvailable": true }, { "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "RF toggle demo", "supportedMinionType": "toggle", "isRecordingSupported": true, "isFetchCommandsAvailable": true }, { "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "Light demo", "supportedMinionType": "light", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "Temperature Light demo", "supportedMinionType": "temperatureLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "Color Light demo", "supportedMinionType": "colorLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mock", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "Roller demo", "supportedMinionType": "roller", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "tuya", "isTokenRequired": true, "isIdRequired": true, "minionsPerDevice": 3, "model": "wall switch, 3 gangs, first one", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "tuya", "isTokenRequired": true, "isIdRequired": true, "minionsPerDevice": 3, "model": "wall switch, 3 gangs, second one", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "tuya", "isTokenRequired": true, "isIdRequired": true, "minionsPerDevice": 3, "model": "wall switch, 3 gangs, third one", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "tuya", "isTokenRequired": true, "isIdRequired": true, "minionsPerDevice": 1, "model": "curtain", "supportedMinionType": "roller", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "tasmota", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "IR Transmitter as Toggle", "supportedMinionType": "toggle", "isRecordingSupported": true, "isFetchCommandsAvailable": true }, { "brand": "tasmota", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": 1, "model": "switch", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "tasmota", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "IR Transmitter as AC", "supportedMinionType": "airConditioning", "isRecordingSupported": false, "isFetchCommandsAvailable": true }, { "brand": "broadlink", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": 1, "model": "SP2", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "broadlink", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "RM3 / RM Pro as IR AC", "supportedMinionType": "airConditioning", "isRecordingSupported": true, "isFetchCommandsAvailable": true }, { "brand": "broadlink", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "RM Pro as RF toggle", "supportedMinionType": "toggle", "isRecordingSupported": true, "isFetchCommandsAvailable": true }, { "brand": "broadlink", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "RM Pro as RF roller", "supportedMinionType": "roller", "isRecordingSupported": true, "isFetchCommandsAvailable": true }, { "brand": "yeelight", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": 1, "model": "Temperature light", "supportedMinionType": "temperatureLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "yeelight", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": 1, "model": "RGBW light", "supportedMinionType": "colorLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "orvibo", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": 1, "model": "S20", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "toggle", "supportedMinionType": "toggle", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "switch", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "air conditioning", "supportedMinionType": "airConditioning", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "light", "supportedMinionType": "light", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "temperature light", "supportedMinionType": "temperatureLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "color light", "supportedMinionType": "colorLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "ifttt", "isTokenRequired": false, "isIdRequired": true, "minionsPerDevice": -1, "model": "roller", "supportedMinionType": "roller", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "miio", "isTokenRequired": true, "isIdRequired": false, "minionsPerDevice": 1, "model": "Robot vacuum", "supportedMinionType": "cleaner", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "miio", "isTokenRequired": true, "isIdRequired": false, "minionsPerDevice": 1, "model": "Philips ceiling", "supportedMinionType": "temperatureLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "toggle", "supportedMinionType": "toggle", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "switch", "supportedMinionType": "switch", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "air conditioning", "supportedMinionType": "airConditioning", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "light", "supportedMinionType": "light", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "temperature light", "supportedMinionType": "temperatureLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "color light", "supportedMinionType": "colorLight", "isRecordingSupported": false, "isFetchCommandsAvailable": false }, { "brand": "mqtt", "isTokenRequired": false, "isIdRequired": false, "minionsPerDevice": -1, "model": "roller", "supportedMinionType": "roller", "isRecordingSupported": false, "isFetchCommandsAvailable": false }];
const profile = { "email": "haim.kastner@gmail.com", "displayName": "Demo User", "scope": "adminAuth", "ignoreTfa": true };

// The const data for mock requests
exports.currentVersion = {
	"version": "3.8.1",
	"commitHash": "c7f2061",
	"timestamp": 1635450863000,
};
exports.updateStatus = JSON.stringify("finished");
exports.scanStatus = JSON.stringify("finished");
exports.commandsRepoAvailableDevices = [{"brand":"electra","category":"airConditioning","model":"relax"},{"brand":"electra","category":"airConditioning","model":"air"},{"brand":"Electra","category":"airConditioning","model":"Unknown (cold)"},{"brand":"tadiran","category":"airConditioning","model":"classic"},{"brand":"tadiran","category":"airConditioning","model":"Classaic - small (cold)"},{"brand":"Tadiran","category":"airConditioning","model":"Classic (cold+hot)"},{"brand":"Electra","category":"airConditioning","model":"Relax (cold+hot)"},{"brand":"Electra","category":"airConditioning","model":"Air (cold+hot)"},{"brand":"Saga","category":"airConditioning","model":"12 X"},{"brand":"LG","category":"toggle","model":"Screen"}];
exports.connectionStatus = JSON.stringify("connectionOK");
exports.defaultMinionStatus = { "airConditioning": { "mode": "hot", "temperature": 17, "fanStrength": 'high', "status": 'on' }, "light": { "brightness": 60, "status": 'on' }, "cleaner": { "mode": "dock", "fanSpeed": "low", "status": 'on' }, "toggle": { "status": "on" }, "temperatureLight": { "brightness": 15, "temperature": 60, "status": 'on' }, "roller": { "status": 'on', "direction": "up" }, "colorLight": { "red": 180, "brightness": 56, "green": 237, "blue": 92, "temperature": 23, "status": 'on' }, "switch": { "status": 'on' } };

/**
 * Create new session
 * Copy the predefined data to state from the predefined state as session ata
 * @param {string} session Session key
 * @param {string} email The logged user 
 */
exports.addSessionData = function (session, email) {
	// Create the session "profile";
	const sessionProfile = { ...profile, email };
	dataStore.set(session, {
		minions,
		timings,
		devices,
		devicesKinds,
		// Keep session user
		sessionUser: email,
		// Append profile to predefined users
		users: [...users, sessionProfile]
	});
}

/**
 * Remove session (and session data)
 * @param {string} session Session key
 */
exports.deleteSessionData = function (session) {
	dataStore.del(session);
}

/**
 * Update session data
 * @param {string} session Session key
 * @param {*} data The new data to set
 */
exports.setSessionData = function (session, data) {
	dataStore.set(session, data);
}

/**
 * Get session data
 * @param {*} session Session key
 * @returns The session data
 */
exports.getSessionData = function (session) {
	const data = dataStore.get(session);
	return data;
}
